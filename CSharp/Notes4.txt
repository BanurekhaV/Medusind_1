Types of classes :

1. static class : cannot be inherited and cannot be instantiated. All memebers have to be static. Eg :static class mystaticclass{  }

2. abstract class: Cannot be instantiated, but have to be inherited. The subclasses(child/derived) can either implement or override its method. 

abstract method: are methods that have only declarations and no definitions (body/implementation/code)

Abstract classes:  are classes that can have both abstract as well as non-abstract members.

Eg : abstract class myabstractclass {   }

3. partial class :Can be defined in multiple Files. Multiple developers can work simultaneously with the class. Eg :public partial class mypartialclass {   }

4. sealed class : cannot be inherited, but can be instantiated. They are concrete classes. Eg : sealed class mysealedclass { }


Interfaces : are like classes, which can contain properties,methods,delegates,events etc, but only have declarations and no implementation
- Interface members are public by default, you cannot modify the access
- They cannot be instantiated, but a reference object can point to a derived class
- They have to be inherited
- A class can inherit from multiple interfaces
- A class that inherits from an interface, will have to provide implementation to all the methods
- Interfaces can inherit from other interface
Eg : interface1{ method1(); method2();}

     interface2{ method3(); method4();}
    
     interface3:interface1,interface2 { method5();}

class a:interface3
{

method1(){}
method2(){}
method3(){}
method4(){}
method5(){}
}


Properties : are named members of classes,structures and interfaces.
- They are extensions of fields
- They are accessed using the accessors(get and set) to read or manipulate the values of private fields of a class
- They do not have storage locations
- They have to be public


Exception : An exception is an unwanted or unexpected event, which occurs during the program execution

  -  handling exeptions using program blocks like
     try{} - Exceptions are activated here. It should consits codes that might run into exceptions. 
            Is followed by one or more catches
     catch{} - A block where exceptions are handled

     finally{} - can be used to execute statements that have to exected wherether or not there is an exception
   
Throw: Allows to throw an exception class object when a problem arises

All C# exceptions are classes. The base class for all exception classes is 'Exception'
 1. System.ApplicationException (User Defined exception classes) and Sytsem.SystemExceptions
(In-Built Exception classes) are derived classes of Exception

