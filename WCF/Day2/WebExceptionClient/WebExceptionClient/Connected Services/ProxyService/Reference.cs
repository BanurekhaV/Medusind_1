//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebExceptionClient.ProxyService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProxyService.IMathsService")]
    public interface IMathsService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMathsService/Divide", ReplyAction="http://tempuri.org/IMathsService/DivideResponse")]
        int Divide(int numerator, int denominator);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMathsService/Divide", ReplyAction="http://tempuri.org/IMathsService/DivideResponse")]
        System.Threading.Tasks.Task<int> DivideAsync(int numerator, int denominator);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMathsServiceChannel : WebExceptionClient.ProxyService.IMathsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MathsServiceClient : System.ServiceModel.ClientBase<WebExceptionClient.ProxyService.IMathsService>, WebExceptionClient.ProxyService.IMathsService {
        
        public MathsServiceClient() {
        }
        
        public MathsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MathsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MathsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MathsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int Divide(int numerator, int denominator) {
            return base.Channel.Divide(numerator, denominator);
        }
        
        public System.Threading.Tasks.Task<int> DivideAsync(int numerator, int denominator) {
            return base.Channel.DivideAsync(numerator, denominator);
        }
    }
}
